" Plugins
call plug#begin('~/.vim/plug')
Plug 'ap/vim-buftabline'
Plug 'haya14busa/vim-operator-flashy'
    let g:operator#flashy#flash_time=300
    map y <Plug>(operator-flashy)
    nmap Y <Plug>(operator-flashy)$
Plug 'itchyny/lightline.vim'
    let g:lightline = { 'colorscheme': 'Tomorrow_Night', }
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'junegunn/goyo.vim'
Plug 'junegunn/vim-slash'
Plug 'justinmk/vim-sneak'
    let g:sneak#label = 1
Plug 'kana/vim-operator-user'
Plug 'godlygeek/tabular' " Must appear before vim-markdown.
Plug 'plasticboy/vim-markdown'
    let g:vim_markdown_no_extensions_in_markdown = 1
Plug 'morhetz/gruvbox'
    let g:gruvbox_contrast_dark='soft'
Plug 'rhysd/vim-clang-format'
    let g:clang_format#detect_style_file=1
Plug 'sukima/xmledit'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-git'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-sleuth'
Plug 'tpope/vim-surround'
Plug 'unblevable/quick-scope'
    augroup qs_colors
        autocmd!
        autocmd ColorScheme * highlight QuickScopePrimary guibg='#323232' gui=underline ctermbg=238 cterm=underline
        autocmd ColorScheme * highlight QuickScopeSecondary gui=underline cterm=underline
    augroup END
Plug 'vimwiki/vimwiki'
    let g:vimwiki_list = [{'path': '~/Dropbox/Sync/notes', 'index': '_index',
                          \ 'syntax': 'markdown', 'ext': '.md'}]
call plug#end()

" Escape insert mode by typing "jk" quickly
imap jk <Esc>

" Allow single character insertions from normal mode
noremap <Space> i <Esc>r

" Allow :Q and :W
com W w
com Q q

" Clear the search highlight
nnoremap <silent> <return> :noh<return>

" Navigate with jkl; instead of hjkl
noremap ; l
noremap l k
noremap k j
noremap j h
noremap h ;

" Visual navigation by default, unless preceded by number
nnoremap <expr> k v:count ? 'j' : 'gj'
nnoremap <expr> l v:count ? 'k' : 'gk'

" Have x and c not modify registers
noremap x "_x
noremap c "_c

" Alt+, and Alt+. to move between buffers
nnoremap <A-,> :bp<return>
nnoremap <A-.> :bn<return>

" Sublime-ish chords.
nnoremap <C-s> :w<return>
nnoremap <A-q> gqip
inoremap <C-v> <C-o>p

" Fast go to buffer
nnoremap gb :ls<CR>:b<Space>

" Ctrl+Direction to move between windows
nnoremap <C-j> <C-w>h
nnoremap <C-k> <C-w>j
nnoremap <C-l> <C-w>k
nnoremap <C-;> <C-w>l

" Current date and time
iab <expr> dts strftime("%Y-%M-%d %T")

" Avoid Ctrl+W
map <C-J> <C-W>

" Make Esc escape Insert mode in NVIM terminal
if has('nvim')
    tnoremap <Esc> <C-\><C-n>
endif

syntax on
set backspace=indent,eol,start
set clipboard=unnamedplus
if system('grep Microsoft /proc/version')
  let g:clipboard = {
      \   'name': 'win32yank-wsl',
      \   'copy': {
      \      '+': 'win32yank.exe -i --crlf',
      \      '*': 'win32yank.exe -i --crlf',
      \    },
      \   'paste': {
      \      '+': 'win32yank.exe -o --lf',
      \      '*': 'win32yank.exe -o --lf',
      \   },
      \   'cache_enabled': 0,
      \ }
endif
set complete-=i
set completeopt=longest,menuone
set colorcolumn=81,91
set copyindent
set cursorline
set directory=~/.vim/swap
set encoding=utf-8
set expandtab
set fillchars+=vert:\ 
set ignorecase
set hidden
set incsearch
set infercase
set laststatus=2
set list
set listchars=tab:→\ ,trail:·
set mouse=a
set nocompatible
set nomodeline
set noshowmatch
set nrformats-=octal
set number
set noshowmode
set omnifunc=syntaxcomplete#Complete
set ruler
set shiftwidth=4
set smartcase
set spell
set spelllang=en_ca
set so=3
set softtabstop=4
set tabstop=4
set t_vb=
if !has('nvim') && &ttimeoutlen == -1
    set ttimeout
    set ttimeoutlen=400
endif
set timeout
set timeoutlen=400
set visualbell
set wildmenu
if v:version > 703 || v:version == 703 && has("patch541")
    set formatoptions+=j " Delete comment character when joining commented lines
endif

" Color scheme
colo gruvbox
set background=dark
hi Normal ctermbg=NONE
hi clear CursorLine
hi CursorLineNr ctermbg=NONE cterm=bold
hi SignColumn ctermbg=NONE
augroup CLNRSet
    autocmd! ColorScheme * hi CursorLineNR cterm=bold
augroup END

" Journal entries created with pass
autocmd BufNewFile,BufRead *.md.txt setlocal syntax=markdown
autocmd BufNewFile,BufRead *.md,*.md.txt setlocal textwidth=80
autocmd FileType c,cpp,objc map <buffer><Leader>rf <Plug>(operator-clang-format)
autocmd FileType yaml setlocal indentexpr=
" Disable cursorline in insert mode
autocmd InsertEnter,InsertLeave * set cul!
